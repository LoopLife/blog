<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.yml.blog.dao.ArticleContentMapper">
  <resultMap id="BaseResultMap" type="cn.yml.blog.entity.ArticleContent">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="content" jdbcType="CLOB" property="content" />
    <result column="article_id" jdbcType="BIGINT" property="articleId" />
    <result column="create_by" jdbcType="TIMESTAMP" property="createBy" />
    <result column="modified_by" jdbcType="TIMESTAMP" property="modifiedBy" />
  </resultMap>
  <sql id="Base_Column_List">
    id, content, article_id, create_by, modified_by
  </sql>

  <select id="selectByArticleId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from tbl_article_content where 1=1 and
    <if test="articleId != null and articleId != ''">
      article_id = #{articleId,jdbcType=BIGINT}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_article_content
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tbl_article_content
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.yml.blog.entity.ArticleContent" useGeneratedKeys="true">
    insert into tbl_article_content (content, article_id, create_by, 
      modified_by)
    values (#{content,jdbcType=CLOB}, #{articleId,jdbcType=BIGINT}, #{createBy,jdbcType=TIMESTAMP},
      #{modifiedBy,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.yml.blog.entity.ArticleContent" useGeneratedKeys="true">
    insert into tbl_article_content
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="content != null">
        content,
      </if>
      <if test="articleId != null">
        article_id,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="modifiedBy != null">
        modified_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="content != null">
        #{content,jdbcType=CLOB},
      </if>
      <if test="articleId != null">
        #{articleId,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedBy != null">
        #{modifiedBy,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.yml.blog.entity.ArticleContent">
    update tbl_article_content
    <set>
      <if test="content != null">
        content = #{content,jdbcType=CLOB},
      </if>
      <if test="articleId != null">
        article_id = #{articleId,jdbcType=BIGINT},
      </if>
      <if test="createBy != null">
        create_by = #{createBy,jdbcType=TIMESTAMP},
      </if>
      <if test="modifiedBy != null">
        modified_by = #{modifiedBy,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.yml.blog.entity.ArticleContent">
    update tbl_article_content
    set content = #{content,jdbcType=CLOB},
      article_id = #{articleId,jdbcType=BIGINT},
      create_by = #{createBy,jdbcType=TIMESTAMP},
      modified_by = #{modifiedBy,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>